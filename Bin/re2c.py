"""re2c regexp [SMIX]

Generate C code that parses the regular expression. Re2C has many limitations
including, but not limited to:
	- can't handle unicode. Only ASCII
	- no backreferences, anchors, lookahead, etc.
	- can't do repetition or repetition on non fixed size (for ex. /((a|bb)+)*)/)
	- no more than 32 character classes.

Usually, if it fails the exception will not be caught so that you'll be
able to see what failed from the backtrace.

The code generated by re2c is not optimized and should be compiled by
an optimizing C compiler which can inline functions.

The options are S:DOTALL, M:MULTILINE, I:IGNORECASE, X:VERBOSE
""";

#
# python cannot run this. It's not because of 'epl' (it could run the
# pyc file). But rejit uses faryield(). faryield() can be emulated for
# single threaded programs though.
#

from sys	 import argv
from rejit	 import re2c
import re

argv = argv [1:]
if not argv or argv [0] == '--help':
	print __doc__
	raise SystemExit


f = 0
if len (argv) > 1:
	opts = { 'S':re.S, 'M':re.M, 'I':re.I, 'X':re.X }
	for i in argv [1]:
		f |= opts [i]

print re2c (argv [0], f)
